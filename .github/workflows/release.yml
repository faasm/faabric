name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    steps:
      - name: "Get the code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Generate a changelog"
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      - name: "Print the changelog"
        run: cat "${{ steps.git-cliff.outputs.changelog }}"
      - name: "Set the release body"
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          r="${r//'%'/'%25'}"     # Multiline escape sequences for %
          r="${r//$'\n'/'%0A'}"   # Multiline escape sequences for '\n'
          r="${r//$'\r'/'%0D'}"   # Multiline escape sequences for '\r'
          echo "::set-output name=RELEASE_BODY::$r"
      - name: "Upload the binary releases"
        uses: svenstaro/upload-release-action@v2
        with:
          file: binary_release.zip
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: ${{ steps.release.outputs.RELEASE_BODY }}

  build-faabric:
    runs-on: ubuntu-latest
    steps:
      - name: "Get the code"
        uses: actions/checkout@v2
      - name: "Get tag version"
        run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV
      - name: "Print tag version"
        run: echo ${{ env.TAG_VERSION }}
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1
      - name: "Log in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: "Build Faabric container"
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/faabric.dockerfile
          context: .
          tags: faasm/faabric:${{ env.TAG_VERSION }}
          build-args: FAABRIC_VERSION=${{ env.TAG_VERSION }}

  build-mpi-native:
    needs: build-faabric
    runs-on: ubuntu-latest
    steps:
      - name: "Get the code"
        uses: actions/checkout@v2
      - name: "Get tag version"
        run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV
      - name: "Print tag version"
        run: echo ${{ env.TAG_VERSION }}
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1
      - name: "Log in to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: "Build native MPI container"
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/faabric-mpi-native.dockerfile
          context: .
          tags: faasm/faabric-mpi-native:${{ env.TAG_VERSION }}
          build-args: FAABRIC_VERSION=${{ env.TAG_VERSION }}
