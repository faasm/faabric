name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]

defaults:
  run:
    shell: bash

jobs:
  # Cancel previous running actions for the same PR
  cancel_previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Workflow Action
        uses: styfle/cancel-workflow-action@0.11.0

  conan-cache:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    container:
      image: faasm/faabric:0.3.5
    steps:
      - uses: faasm/conan-cache-action@v1

  docs:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    container:
      image: faasm/faabric:0.3.5
    steps:
      - name: "Check out code"
        uses: actions/checkout@v3
      - name: "Build docs"
        run: ./bin/inv_wrapper.sh docs

  formatting:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    container:
      image: faasm/faabric:0.3.5
    steps:
      - name: "Check out code"
        uses: actions/checkout@v3
        # We need to set the safe git directory as formatting relies on git-ls
        # See actions/checkout#766
      - name: "Set the GH workspace as a safe git directory"
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: "Code formatting checks"
        run: ./bin/inv_wrapper.sh format-code

  tests:
    if: github.event.pull_request.draft == false
    needs: [conan-cache]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sanitiser: [None, Address, Thread, Undefined, Leak]
    env:
      HOST_TYPE: ci
      REDIS_QUEUE_HOST: redis
      REDIS_STATE_HOST: redis
      ASAN_OPTIONS: "verbosity=1:halt_on_error=1"
      TSAN_OPTIONS: "verbosity=1:halt_on_error=1:suppressions=/code/faabric/thread-sanitizer-ignorelist.txt:history_size=7"
      UBSAN_OPTIONS: "print_stacktrace=1:halt_on_error=1"
    container:
      image: faasm/faabric:0.3.5
      options: --privileged
    services:
      redis:
        image: redis
    steps:
      - uses: faasm/conan-cache-action@v1
      - name: "Ping redis"
        run: redis-cli -h redis ping
      - name: "Run cmake for tests"
        run: ./bin/inv_wrapper.sh dev.cmake --clean --build=Debug --sanitiser ${{ matrix.sanitiser }}
      - name: "Build tests"
        run: ./bin/inv_wrapper.sh dev.cc faabric_tests
      - name: "Run tests"
        run: ./bin/faabric_tests
        working-directory: /build/faabric/static

  dist-tests:
    if: github.event.pull_request.draft == false
    needs: [conan-cache]
    runs-on: ubuntu-latest
    env:
      CONAN_CACHE_MOUNT_SOURCE: ~/.conan/
    steps:
      # --- Code update ---
      - name: "Check out code"
        uses: actions/checkout@v3
      - name: "Conan cache"
        uses: faasm/conan-cache-action@v1
      - name: "Build distributed tests"
        run: ./dist-test/build.sh
      - name: "Run the distributed tests"
        run: ./dist-test/run.sh

  examples:
    if: github.event.pull_request.draft == false
    needs: [conan-cache]
    runs-on: ubuntu-latest
    env:
      HOST_TYPE: ci
      REDIS_QUEUE_HOST: redis
      REDIS_STATE_HOST: redis
    container:
      image: faasm/faabric:0.3.5
    services:
      redis:
        image: redis
    steps:
      - uses: faasm/conan-cache-action@v1
        with:
          build-type: "release"
      - name: "Run cmake shared"
        run: ./bin/inv_wrapper.sh dev.cmake --clean --shared --build=Release
      - name: "Build Faabric shared library"
        run: ./bin/inv_wrapper.sh dev.cc faabric --shared
      - name: "Install Faabric shared library"
        run: ./bin/inv_wrapper.sh dev.install faabric --shared
      - name: "Build examples"
        run: ./bin/inv_wrapper.sh examples
      - name: "Run example to check"
        run: ./bin/inv_wrapper.sh examples.execute check
